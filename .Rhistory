# Extract estimates for fixed and random effects
coefs <- data.frame(coef(mod)$Family)
coefs <- coefs %>%
rename(Intercept = `(Intercept)`, B1 = TreatmentGamma, B2 = TreatmentHZE,
B3 = SexM, B4 = TreatmentGamma:SexM, B5 = TreatmentHZE:SexM) %>%
rownames_to_column(var = "Family")
colnames(coef)
str(coefs)
coefs <- coefs %>%
rename(Intercept = X.Intercept., B1 = TreatmentGamma, B2 = TreatmentHZE,
B3 = SexM, B4 = TreatmentGamma:SexM, B5 = TreatmentHZE:SexM) %>%
rownames_to_column(var = "Family")
coefs
# Extract estimates for fixed and random effects
coefs <- data.frame(coef(mod)$Family)
str(coefs)
coefs <- coefs %>%
rename(Intercept = X.Intercept., B1 = TreatmentGamma, B2 = TreatmentHZE,
B3 = SexM, B4 = TreatmentGamma.SexM, B5 = TreatmentHZE.SexM) %>%
rownames_to_column(var = "Family")
str(coefs)
coefs <- coefs %>%
rename(Intercept = X.Intercept., B1 = TreatmentGamma, B2 = TreatmentHZE,
B3 = SexM, B4 = TreatmentGamma.SexM, B5 = TreatmentHZE.SexM) %>%
rownames_to_column(var = "Family") %%
mutate(Family = as.factor(Family))
# Extract estimates for fixed and random effects
coefs <- data.frame(coef(mod)$Family)
coefs <- coefs %>%
rename(Intercept = X.Intercept., B1 = TreatmentGamma, B2 = TreatmentHZE,
B3 = SexM, B4 = TreatmentGamma.SexM, B5 = TreatmentHZE.SexM) %>%
rownames_to_column(var = "Family") %%
mutate(Family = as.factor(Family))
# Extract estimates for fixed and random effects
coefs <- data.frame(coef(mod)$Family)
coefs <- coefs %>%
rename(Intercept = X.Intercept., B1 = TreatmentGamma, B2 = TreatmentHZE,
B3 = SexM, B4 = TreatmentGamma.SexM, B5 = TreatmentHZE.SexM) %>%
rownames_to_column(var = "Family") %>%
mutate(Family = as.factor(Family))
str(coefs)
str(cats)
preds <- cats %>%
select(c(Animal, Family, Cataracts, Gamma, HZE, SexM))
preds
str(preds)
preds <- cats %>%
select(c(Animal, Family, Cataracts, Gamma, HZE, SexM)) %>%
left_join(coefs, by = "Family")
str(preds)
preds <- cats %>%
select(c(Animal, Family, Cataracts, Gamma, HZE, SexM)) %>%
rename(Sex = SexM) %>%
left_join(coefs, by = "Family") %>%
mutate(lo_c = Intercept + B3*Sex,
lo_g = Intercept + B1*Gamma + B3*Sex + B4*Gamma*Sex,
lo_h = Intercept + B2*HZE + B3*Sex + B5*HZE*Sex)
str(preds)
preds <- cats %>%
select(c(Animal, Family, Cataracts, Gamma, HZE, SexM)) %>%
rename(Sex = SexM) %>%
left_join(coefs, by = "Family") %>%
mutate(LogOdds = Intercept + B1*Gamma + B2*HZE + B3*Sex +
B4*Gamma*Sex + B5*HZE*Sex)
str(preds)
preds <- preds %>%
mutate(OddsRatio = exp(LogOdds))
preds <- cats %>%
select(c(Animal, Family, Cataracts, Gamma, HZE, SexM)) %>%
rename(Sex = SexM) %>%
left_join(coefs, by = "Family") %>%
mutate(LogOdds = Intercept + B1*Gamma + B2*HZE + B3*Sex +
B4*Gamma*Sex + B5*HZE*Sex)
preds <- preds %>%
mutate(Odds = exp(LogOdds))
preds <- preds %>%
mutate(Probs = Odds / (1 + Odds))
str(Probs)
str(proba)
str(probs)
str(preds)
plot(preds$Probs)
cats <- cats %>%
mutate(Probs = fitted(mod))
plot(cats$Probs)
ggplot(cats, aes(x = Treatment, y = Probs, Group = Family)) +
geom_line() + facet_grid(vars(Sex)) +
scale_color_startrek()
ggplot(cats, aes(x = Treatment, y = Probs, Group = Family)) +
geom_point() + facet_grid(vars(Sex)) +
scale_color_startrek()
# think about how to plot this!
plot(cats$Cataract, cats$Probs)
ggplot(cats, aes(x = Cataracts, y = Probs)) +
geom_point()
ggplot(cats, aes(x = Probs, y = Cataracts)) +
geom_point()
library(broom.mixed)
augment(ranef(mod), ci.level = 0.95)
library(broom.mixed)
ggplot(posts, aes(x = sigma2)) +
geom_density(color = "cyan4", fill = "aquamarine4", alpha = 0.5) +
geom_vline(aes(xintercept = bayes_tab[7,5]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,6]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,3]), color = "darkorange3") + # calculate mode and replot
scale_x_continuous(expand = c(0, 0)) +
theme_light() +
labs(x = "Probability",
title = "Random Family Variance: Posterior Density with 95% HPD Interval")
bayes_tab
ggplot(posts, aes(x = sigma2)) +
geom_density(color = "cyan4", fill = "aquamarine4", alpha = 0.5) +
geom_vline(aes(xintercept = bayes_tab[7,6]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,7]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,3]), color = "darkorange3") + # calculate mode and replot
scale_x_continuous(expand = c(0, 0)) +
theme_light() +
labs(x = "Probability",
title = "Random Family Variance: Posterior Density with 95% HPD Interval")
ggplot(posts, aes(x = sigma2)) +
geom_density(color = "cyan4", fill = "aquamarine4", alpha = 0.5) +
geom_vline(aes(xintercept = bayes_tab[7,6]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,7]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,4]), color = "darkorange3") + # calculate mode and replot
scale_x_continuous(expand = c(0, 0)) +
theme_light() +
labs(x = "Probability",
title = "Random Family Variance: Posterior Density with 95% HPD Interval")
ggplot(posts, aes(x = sigma2)) +
geom_density(color = "cyan4", fill = "aquamarine4", alpha = 0.5) +
geom_vline(aes(xintercept = bayes_tab[7,6]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,7]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,4]), color = "darkorange3") + # calculate mode and replot
scale_x_continuous(limits = c(0, 1.2), expand = c(0, 0)) +
theme_light() +
labs(x = "Probability",
title = "Random Family Variance: Posterior Density with 95% HPD Interval")
ggplot(posts, aes(x = sigma2)) +
geom_density(color = "cyan4", fill = "aquamarine4", alpha = 0.5) +
geom_vline(aes(xintercept = bayes_tab[7,6]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,7]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,3]), color = "darkorange3") + # calculate mode and replot
scale_x_continuous(limits = c(0, 1.2), expand = c(0, 0)) +
theme_light() +
labs(x = "Probability",
title = "Random Family Variance: Posterior Density with 95% HPD Interval")
ggplot(posts, aes(x = sigma2)) +
geom_density(color = "cyan4", fill = "aquamarine4", alpha = 0.5) +
geom_vline(aes(xintercept = bayes_tab[7,6]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,7]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,2]), color = "darkorange3") + # calculate mode and replot
scale_x_continuous(limits = c(0, 1.2), expand = c(0, 0)) +
theme_light() +
labs(x = "Probability",
title = "Random Family Variance: Posterior Density with 95% HPD Interval")
ggplot(posts, aes(x = sigma2)) +
geom_density(color = "cyan4", fill = "aquamarine4", alpha = 0.5) +
geom_vline(aes(xintercept = bayes_tab[7,6]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,7]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,3]), color = "darkorange3") + # calculate mode and replot
scale_x_continuous(limits = c(0, 1.2), expand = c(0, 0)) +
theme_light() +
labs(x = "Probability",
title = "Random Family Variance: Posterior Density with 95% HPD Interval")
ggplot(posts, aes(x = sigma2)) +
geom_density(color = "cyan4", fill = "aquamarine4", alpha = 0.5) +
geom_vline(aes(xintercept = bayes_tab[7,6]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,7]), color = "darkorchid", linetype = "dashed") +
geom_vline(aes(xintercept = bayes_tab[7,3]), color = "darkorange3") + # calculate mode and replot
scale_x_continuous(limits = c(0, 1.0), expand = c(0, 0)) +
theme_light() +
labs(x = "Probability",
title = "Random Family Variance: Posterior Density with 95% HPD Interval")
range(ranef(mod))
REs <- augment(ranef(mod), ci.level = 0.95)
str(REs)
REs <- augment(ranef(mod), ci.level = 0.95) %>%
select(c(level, estimate, lb, up)) %>%
rename(Family = level)
REs <- augment(ranef(mod), ci.level = 0.95) %>%
select(c(level, estimate, lb, ub)) %>%
rename(Family = level)
REs <- augment(ranef(mod), ci.level = 0.95) %>%
select(c(level, estimate, lb, ub)) %>%
rename(Family = level) %>%
mutate(Prob = exp(estimate)/(1+exp(estimate)),
Lower = exp(lb)/(1+exp(lb)),
Upper = exp(ub)/(1+exp(ub)))
REs <- augment(ranef(mod), ci.level = 0.95) %>%
select(c(level, estimate, qq, lb, ub)) %>%
rename(Family = level) %>%
mutate(Prob = exp(estimate)/(1+exp(estimate)),
Lower = exp(lb)/(1+exp(lb)),
Upper = exp(ub)/(1+exp(ub)))
str(REs)
range(REs$qq)
REs <- augment(ranef(mod,condVar = TRUE), ci.level = 0.95) %>%
select(c(level, estimate, qq, lb, ub)) %>%
rename(Family = level) %>%
mutate(Prob = exp(estimate)/(1+exp(estimate)),
Lower = exp(lb)/(1+exp(lb)),
Upper = exp(ub)/(1+exp(ub)))
REs <- augment(ranef(mod,condVar = TRUE), ci.level = 0.95)
str(REs)
REs <- augment(ranef(mod,condVar = TRUE), ci.level = 0.95) %>%
select(c(level, estimate, lb, ub)) %>%
rename(Family = level) %>%
mutate(Prob = exp(estimate)/(1+exp(estimate)),
Lower = exp(lb)/(1+exp(lb)),
Upper = exp(ub)/(1+exp(ub)))
str(REs)
ggplot(REs, aes(x = Prob, y = Family,
xmin = Lower, ymin = Upper)) +
geom_errorbar(height = 0) +
geom_vline(xintercept = 0, lty = 2) +
geom_point() +
facet_wrap(~variable, scale = "free_x")
ggplot(REs, aes(x = Prob, y = Family,
xmin = Lower, ymin = Upper)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = 0, lty = 2) +
geom_point() +
facet_wrap(~variable, scale = "free_x")
ggplot(REs, aes(x = Prob, y = Family,
xmin = Lower, ymin = Upper)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = 0, lty = 2) +
geom_point()
ggplot(REs, aes(x = Prob, y = Family,
xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = 0, lty = 2) +
geom_point()
var
ggplot(REs, aes(x = Prob, y = Family,
xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = var, lty = 2) +
geom_point()
p_var <- exp(var)/(1+exp(var))
p_var
ggplot(REs, aes(x = Prob, y = Family,
xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = p_var, lty = 2) +
geom_point()
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper, color = Family)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = p_var, lty = 2) +
geom_point() +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper, color = Family)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = p_var, lty = 2) +
geom_point() +
theme_light() +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = p_var, lty = 2) +
geom_point() +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0) +
geom_vline(xintercept = p_var, lty = 2, color = "#CC0C00FF") +
geom_point() +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "#5C88DAFF") +
geom_vline(xintercept = p_var, lty = 2, lwd = 2, color = "#CC0C00FF") +
geom_point(color = "#5C88DAFF") +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "#5C88DAFF") +
geom_vline(xintercept = p_var, lty = 2, color = "#CC0C00FF") +
geom_point(color = "#5C88DAFF") +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
bayes_tab
sigs <- bayes_tab[7,]
p_sigs <- exp(sigs)/(1+exp(sigs))
p_sigs
p_var
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "#5C88DAFF") +
geom_vline(xintercept = p_var, lty = 2, color = "#CC0C00FF") +
geom_vline(x_intercept = p_sigs[4], lty = 3, color = "#84BD00FF") +
geom_point(color = "#5C88DAFF") +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "#5C88DAFF") +
geom_vline(xintercept = p_var, lty = 2, color = "#CC0C00FF") +
geom_vline(xintercept = p_sigs[4], lty = 3, color = "#84BD00FF") +
geom_point(color = "#5C88DAFF") +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
psig <- p_sigs[4]
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "#5C88DAFF") +
geom_vline(xintercept = p_var, lty = 2, color = "#CC0C00FF") +
geom_vline(xintercept = psig, lty = 3, color = "#84BD00FF") +
geom_point(color = "#5C88DAFF") +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
psig <- as.numeric(p_sigs[4])
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "#5C88DAFF") +
geom_vline(xintercept = p_var, lty = 2, color = "#CC0C00FF") +
geom_vline(xintercept = psig, lty = 3, color = "#84BD00FF") +
geom_point(color = "#5C88DAFF") +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "#5C88DAFF") +
geom_vline(xintercept = p_var, lty = 2, lwd = 1.5, color = "#CC0C00FF") +
geom_vline(xintercept = psig, lty = 2, lwd = 1.5, color = "#FFCD00FF") +
geom_point(color = "#5C88DAFF") +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "#5C88DAFF") +
geom_vline(xintercept = p_var, lwd = 1.1, color = "#CC0C00FF") +
geom_vline(xintercept = psig, lwd = 1.1, color = "#84BD00FF") +
geom_point(color = "#5C88DAFF") +
theme_light() +
scale_color_startrek() +
labs(title = "Random Effect Term as Probability, by Family")
colors <- c("Family Effect" = "#5C88DAFF", "GLMM Est" = "#CC0C00FF", "Bayes Mode" = "#84BD00FF")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(height = 0, color = "Family Effect") +
geom_point(color = "Family Effect") +
geom_vline(xintercept = p_var, lwd = 1.1, color = "GLMM Est") +
geom_vline(xintercept = psig, lwd = 1.1, color = "Bayes Mode") +
theme_light() +
scale_color_manual(values = colors) +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, lwd = 1.1, color = "GLMM Est")) +
geom_vline(aes(xintercept = psig, lwd = 1.1, color = "Bayes Mode")) +
theme_light() +
scale_color_manual(values = colors) +
labs(title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est")) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode")) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
theme_light() +
theme(fill = colors) +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect Term as Probability, by Family")
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
theme_light() +
scale_fill_manual(values = colors) +
labs(color = "", title = "Random Effect Term as Probability, by Family")
color
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect Term as Probability, by Family")
png(filename = "re_plot.png", units = "in", width = 6, height = 6, res = 300)
re_plot
re_plot <- ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect by Family")
png(filename = "re_plot.png", units = "in", width = 6, height = 6, res = 300)
re_plot
dev.off()
png(filename = "re_plot.png", units = "in", width = 8, height = 6, res = 300)
re_plot
dev.off()
citation("lme4")
citation("rjags")
citation("emmeans")
p_sigs <- as.numeric(exp(sigs)/(1+exp(sigs)))
p_sigs
sigs
p_sigs <- exp(sigs)/(1+exp(sigs))
p_sigs
exp(.148)
1.159513/2.159513
REs <- augment(ranef(mod,condVar = TRUE), ci.level = 0.95) %>%
select(c(level, estimate, lb, ub)) %>%
rename(Family = level) %>%
mutate(Prob = exp(estimate)/(1+exp(estimate)),
Lower = exp(lb)/(1+exp(lb)),
Upper = exp(ub)/(1+exp(ub)))
colors <- c("Family Effect" = "#5C88DAFF", "GLMM Est" = "#CC0C00FF", "Bayes Mode" = "#84BD00FF",
"HPD Interval" = "FFCD00FF")
re_plot <- ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = p_sigs[4], color = "Bayes Mode"), lty = 2) +
geom_vline(aes(xintercept = p_sigs[6], color = "HPD Interval"), lty = 2) +
geom_vline(aes(xintercept = p_sigs[7], color = "HPD Interval"), lty = 2) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect by Family")
re_plot
p_sigs <- exp(sigs)/(1+exp(sigs))
psig <- as.numeric(p_sigs[4])
hpdl <- as.numeric(p_sigs[6])
hpdu <- as.numeric(p_sigs[7])
REs <- augment(ranef(mod,condVar = TRUE), ci.level = 0.95) %>%
select(c(level, estimate, lb, ub)) %>%
rename(Family = level) %>%
mutate(Prob = exp(estimate)/(1+exp(estimate)),
Lower = exp(lb)/(1+exp(lb)),
Upper = exp(ub)/(1+exp(ub)))
REs
p_sigs <- exp(sigs)/(1+exp(sigs))
psig <- as.numeric(p_sigs[4])
hpdl <- as.numeric(p_sigs[6])
hpdu <- as.numeric(p_sigs[7])
REs <- augment(ranef(mod,condVar = TRUE), ci.level = 0.95) %>%
select(c(level, estimate, lb, ub)) %>%
rename(Family = level) %>%
mutate(Prob = exp(estimate)/(1+exp(estimate)),
Lower = exp(lb)/(1+exp(lb)),
Upper = exp(ub)/(1+exp(ub)))
colors <- c("Family Effect" = "#5C88DAFF", "GLMM Est" = "#CC0C00FF", "Bayes Mode" = "#84BD00FF",
"HPD Interval" = "FFCD00FF")
re_plot <- ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
geom_vline(aes(xintercept = hpdl, color = "HPD Interval"), lty = 2) +
geom_vline(aes(xintercept = hpdu, color = "HPD Interval"), lty = 2) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect by Family")
re_plot
colors <- c("Family Effect" = "#5C88DAFF", "GLMM Est" = "#CC0C00FF", "Bayes Mode" = "#84BD00FF",
"HPD Interval" = "#FFCD00FF")
re_plot <- ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
geom_vline(aes(xintercept = hpdl, color = "HPD Interval"), lty = 2) +
geom_vline(aes(xintercept = hpdu, color = "HPD Interval"), lty = 2) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect by Family")
re_plot
re_plot
ggplot(REs, aes(x = Prob, y = Family, xmin = Lower, xmax = Upper)) +
geom_errorbarh(aes(height = 0, color = "Family Effect")) +
geom_point(aes(color = "Family Effect")) +
geom_vline(aes(xintercept = p_var, color = "GLMM Est"), lty = 2) +
geom_vline(aes(xintercept = psig, color = "Bayes Mode"), lty = 2) +
geom_vline(aes(xintercept = hpdl, color = "HPD Interval"), lty = 2) +
geom_vline(aes(xintercept = hpdu, color = "HPD Interval"), lty = 2) +
theme_light() +
scale_color_manual(values = colors) +
labs(color = "", title = "Random Effect by Family")
